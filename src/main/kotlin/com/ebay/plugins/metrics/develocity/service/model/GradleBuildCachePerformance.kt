/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport", "DEPRECATION"
)

package com.ebay.plugins.metrics.develocity.service.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * The build cache performance of a Gradle build.
 *
 * @param id The Build Scan ID.
 * @param buildTime Wall clock duration of the build in milliseconds.
 * @param effectiveTaskExecutionTime Wall clock time spent executing tasks in milliseconds. It is the time spent between the start of the first task in the execution phase and the end of the last task of the execution phase, removing any interval where no task is being executed.
 * @param effectiveWorkUnitExecutionTime Wall clock time spent executing work units (tasks and artifact transforms) in milliseconds. It is the time spent between the start of the first work unit in the execution phase and the end of the last work unit of the execution phase, removing any interval where no work unit is being executed.
 * @param serialTaskExecutionTime Wall clock time of all task executions in milliseconds. It is the sum of all individual task durations.
 * @param serialWorkUnitExecutionTime Wall clock time of all work unit executions (tasks and artifact transforms) in milliseconds. It is the sum of all individual work unit durations.
 * @param serializationFactor The ratio of `serialWorkUnitExecutionTime` over the `effectiveWorkUnitExecutionTime`. Quantifies the effect of work unit parallelization. A value equal to `1` means that no parallelization occurred. A value greater than `1` means that work units are executed faster due to parallelization.
 * @param taskExecution A list of executed tasks with performance related information.
 * @param avoidanceSavingsSummary 
 * @param taskAvoidanceSavingsSummary 
 * @param workUnitAvoidanceSavingsSummary 
 * @param taskFingerprintingSummary 
 * @param workUnitFingerprintingSummary 
 * @param buildCaches 
 */
@Serializable

data class GradleBuildCachePerformance (

    /* The Build Scan ID. */
    @SerialName(value = "id")
    val id: kotlin.String,

    /* Wall clock duration of the build in milliseconds. */
    @SerialName(value = "buildTime")
    val buildTime: kotlin.Long,

    /* Wall clock time spent executing tasks in milliseconds. It is the time spent between the start of the first task in the execution phase and the end of the last task of the execution phase, removing any interval where no task is being executed. */
    @SerialName(value = "effectiveTaskExecutionTime")
    val effectiveTaskExecutionTime: kotlin.Long,

    /* Wall clock time spent executing work units (tasks and artifact transforms) in milliseconds. It is the time spent between the start of the first work unit in the execution phase and the end of the last work unit of the execution phase, removing any interval where no work unit is being executed. */
    @SerialName(value = "effectiveWorkUnitExecutionTime")
    val effectiveWorkUnitExecutionTime: kotlin.Long,

    /* Wall clock time of all task executions in milliseconds. It is the sum of all individual task durations. */
    @SerialName(value = "serialTaskExecutionTime")
    val serialTaskExecutionTime: kotlin.Long,

    /* Wall clock time of all work unit executions (tasks and artifact transforms) in milliseconds. It is the sum of all individual work unit durations. */
    @SerialName(value = "serialWorkUnitExecutionTime")
    val serialWorkUnitExecutionTime: kotlin.Long,

    /* The ratio of `serialWorkUnitExecutionTime` over the `effectiveWorkUnitExecutionTime`. Quantifies the effect of work unit parallelization. A value equal to `1` means that no parallelization occurred. A value greater than `1` means that work units are executed faster due to parallelization. */
    @SerialName(value = "serializationFactor")
    val serializationFactor: kotlin.Double,

    /* A list of executed tasks with performance related information. */
    @SerialName(value = "taskExecution")
    val taskExecution: kotlin.collections.List<GradleBuildCachePerformanceTaskExecutionEntry>,

    @SerialName(value = "avoidanceSavingsSummary")
    @Deprecated(message = "This property is deprecated.")
    val avoidanceSavingsSummary: GradleBuildCachePerformanceAvoidanceSavingsSummary,

    @SerialName(value = "taskAvoidanceSavingsSummary")
    val taskAvoidanceSavingsSummary: GradleBuildCachePerformanceTaskAvoidanceSavingsSummary,

    @SerialName(value = "workUnitAvoidanceSavingsSummary")
    val workUnitAvoidanceSavingsSummary: GradleBuildCachePerformanceWorkUnitAvoidanceSavingsSummary,

    @SerialName(value = "taskFingerprintingSummary")
    val taskFingerprintingSummary: GradleBuildCachePerformanceTaskFingerprintingSummary? = null,

    @SerialName(value = "workUnitFingerprintingSummary")
    val workUnitFingerprintingSummary: GradleBuildCachePerformanceWorkUnitFingerprintingSummary? = null,

    @SerialName(value = "buildCaches")
    val buildCaches: GradleBuildCachePerformanceBuildCaches? = null

)

