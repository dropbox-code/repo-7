/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport", "DEPRECATION"
)

package com.ebay.plugins.metrics.develocity.service.model

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * The attributes of a Maven build.
 *
 * @param id The Build Scan ID.
 * @param buildStartTime The time when the build starts, as milliseconds since Epoch.
 * @param buildDuration The duration of the build, as milliseconds since Epoch.
 * @param mavenVersion The Maven version used.
 * @param extensionVersion The Develocity Maven extension version used.
 * @param requestedGoals The list of requested goals.
 * @param hasFailed True when the build fails, false otherwise.
 * @param tags The list of Build Scan tags.
 * @param propertyValues The list of Build Scan values.
 * @param links The list of Build Scan links.
 * @param gradleEnterpriseSettings 
 * @param develocitySettings 
 * @param buildOptions 
 * @param environment 
 * @param topLevelProjectName The top level project name. `null` in case of very early build failure.
 * @param hasVerificationFailure Set only if the build fails: true when the build has at least one failure classified as \"Verification\", false otherwise.  The Verification classification is meant for failures that are expected within a standard application development lifecycle. They typically represent a problem with the developer’s inputs to the build such as the source code. 
 * @param hasNonVerificationFailure Set only if the build fails: true when the build has at least one failure classified as \"Non-verification\", false otherwise.  The Non-verification classification is meant for failures that are typically not expected within a standard application development lifecycle, such as build configuration failures, dependency resolution failures, and infrastructure failures. 
 */
@Serializable

data class MavenAttributes (

    /* The Build Scan ID. */
    @SerialName(value = "id")
    val id: kotlin.String,

    /* The time when the build starts, as milliseconds since Epoch. */
    @SerialName(value = "buildStartTime")
    val buildStartTime: kotlin.Long,

    /* The duration of the build, as milliseconds since Epoch. */
    @SerialName(value = "buildDuration")
    val buildDuration: kotlin.Long,

    /* The Maven version used. */
    @SerialName(value = "mavenVersion")
    val mavenVersion: kotlin.String,

    /* The Develocity Maven extension version used. */
    @SerialName(value = "extensionVersion")
    val extensionVersion: kotlin.String,

    /* The list of requested goals. */
    @SerialName(value = "requestedGoals")
    val requestedGoals: kotlin.collections.List<kotlin.String>,

    /* True when the build fails, false otherwise. */
    @SerialName(value = "hasFailed")
    val hasFailed: kotlin.Boolean,

    /* The list of Build Scan tags. */
    @SerialName(value = "tags")
    val tags: kotlin.collections.List<kotlin.String>,

    /* The list of Build Scan values. */
    @SerialName(value = "values")
    val propertyValues: kotlin.collections.List<BuildAttributesValue>,

    /* The list of Build Scan links. */
    @SerialName(value = "links")
    val links: kotlin.collections.List<BuildAttributesLink>,

    @SerialName(value = "gradleEnterpriseSettings")
    @Deprecated(message = "This property is deprecated.")
    val gradleEnterpriseSettings: MavenGradleEnterpriseSettings,

    @SerialName(value = "develocitySettings")
    val develocitySettings: MavenDevelocitySettings,

    @SerialName(value = "buildOptions")
    val buildOptions: MavenBuildOptions,

    @SerialName(value = "environment")
    val environment: BuildAttributesEnvironment,

    /* The top level project name. `null` in case of very early build failure. */
    @SerialName(value = "topLevelProjectName")
    val topLevelProjectName: kotlin.String? = null,

    /* Set only if the build fails: true when the build has at least one failure classified as \"Verification\", false otherwise.  The Verification classification is meant for failures that are expected within a standard application development lifecycle. They typically represent a problem with the developer’s inputs to the build such as the source code.  */
    @SerialName(value = "hasVerificationFailure")
    val hasVerificationFailure: kotlin.Boolean? = null,

    /* Set only if the build fails: true when the build has at least one failure classified as \"Non-verification\", false otherwise.  The Non-verification classification is meant for failures that are typically not expected within a standard application development lifecycle, such as build configuration failures, dependency resolution failures, and infrastructure failures.  */
    @SerialName(value = "hasNonVerificationFailure")
    val hasNonVerificationFailure: kotlin.Boolean? = null

)

