/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.ebay.plugins.metrics.develocity.service.model


import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable

/**
 * 
 *
 * @param goalName The goal name.
 * @param mojoType The fully qualified class name of the Mojo that provides the implementation of this goal.
 * @param goalExecutionId The goal execution ID.
 * @param goalProjectName The goal project name.
 * @param avoidanceOutcome The avoidance outcome of this task with respect to performance:   * `avoided_from_local_cache` - Goal whose execution is avoided due to reusing a local build cache entry   * `avoided_from_remote_cache` - Goal whose execution is avoided due to reusing a remote build cache entry   * `executed_cacheable` - Goal which is executed but is cacheable   * `executed_not_cacheable` - Goal which is executed but is not cacheable   * `executed_unknown_cacheability` - Goal which is executed and whose cacheability cannot be determined   * `skipped` - Skipped goal 
 * @param duration The goal duration in milliseconds.
 * @param fingerprintingDuration The goal fingerprinting duration in milliseconds. This duration is part of the complete task execution duration. `null` if the goal is not fingerprinted.
 * @param avoidanceSavings The goal avoidance savings in milliseconds, which can be negative. Negative values indicate that it takes more time to reuse outputs than it did to create them originally. `null` if the information is not available.
 * @param nonCacheabilityCategory The category of the non-cacheability reason:   * `build_cache_disabled_by_user` - The build cache is disabled by the user   * `goal_execution_marked_non_cacheable` - The goal execution is marked as non-cacheable   * `goal_not_supported` - The goal does not support build caching   * `no_gradle_enterprise_server_configured` - No Develocity server is configured **Deprecated, use `no_develocity_server_configured` instead**   * `no_develocity_server_configured` - No Develocity server is configured   * `non_clean_build` - The `clean` lifecycle is not executed    * `not_entitled` - The Develocity license entitlements does not allow Maven build caching   * `offline_build` - The build is run in offline mode   * `unknown` - Reason for disabled caching is not known   * `unknown_entitlements` - The Develocity license entitlements cannot be checked  `null` when the goal execution is cacheable or if the information is not available. 
 * @param nonCacheabilityReason The human-readable reason for a non-cacheable goal execution. `null` when the goal execution is cacheable or if the information is not available.
 * @param cacheArtifactSize The number of bytes of the produced or consumed cache artifact. For a goal execution where the outputs are successfully stored to a local or remote cache, this is the size of the stored cache artifact. For a goal execution where the outputs are successfully loaded from a local or remote cache, this is the size of the loaded cache artifact. `null` if the goal execution is not cacheable, or if the attempt to store or load the artifact from cache does not succeed. 
 * @param cacheArtifactRejectedReason The reason why the cache artifact has been rejected:   * `artifact_size_too_large` - The size of the artifact is larger than the remote build cache can accept.  `null` if the goal is not cacheable, or if the attempt to store the artifact does not succeed. 
 * @param cacheKey Build cache key. `null` if no build cache key was computed (e.g. when fingerprinting failed).
 */
@Serializable

data class MavenBuildCachePerformanceGoalExecutionEntry (

    /* The goal name. */
    @SerialName(value = "goalName")
    val goalName: kotlin.String,

    /* The fully qualified class name of the Mojo that provides the implementation of this goal. */
    @SerialName(value = "mojoType")
    val mojoType: kotlin.String,

    /* The goal execution ID. */
    @SerialName(value = "goalExecutionId")
    val goalExecutionId: kotlin.String,

    /* The goal project name. */
    @SerialName(value = "goalProjectName")
    val goalProjectName: kotlin.String,

    /* The avoidance outcome of this task with respect to performance:   * `avoided_from_local_cache` - Goal whose execution is avoided due to reusing a local build cache entry   * `avoided_from_remote_cache` - Goal whose execution is avoided due to reusing a remote build cache entry   * `executed_cacheable` - Goal which is executed but is cacheable   * `executed_not_cacheable` - Goal which is executed but is not cacheable   * `executed_unknown_cacheability` - Goal which is executed and whose cacheability cannot be determined   * `skipped` - Skipped goal  */
    @SerialName(value = "avoidanceOutcome")
    val avoidanceOutcome: MavenBuildCachePerformanceGoalExecutionEntry.AvoidanceOutcome,

    /* The goal duration in milliseconds. */
    @SerialName(value = "duration")
    val duration: kotlin.Long,

    /* The goal fingerprinting duration in milliseconds. This duration is part of the complete task execution duration. `null` if the goal is not fingerprinted. */
    @SerialName(value = "fingerprintingDuration")
    val fingerprintingDuration: kotlin.Long? = null,

    /* The goal avoidance savings in milliseconds, which can be negative. Negative values indicate that it takes more time to reuse outputs than it did to create them originally. `null` if the information is not available. */
    @SerialName(value = "avoidanceSavings")
    val avoidanceSavings: kotlin.Long? = null,

    /* The category of the non-cacheability reason:   * `build_cache_disabled_by_user` - The build cache is disabled by the user   * `goal_execution_marked_non_cacheable` - The goal execution is marked as non-cacheable   * `goal_not_supported` - The goal does not support build caching   * `no_gradle_enterprise_server_configured` - No Develocity server is configured **Deprecated, use `no_develocity_server_configured` instead**   * `no_develocity_server_configured` - No Develocity server is configured   * `non_clean_build` - The `clean` lifecycle is not executed    * `not_entitled` - The Develocity license entitlements does not allow Maven build caching   * `offline_build` - The build is run in offline mode   * `unknown` - Reason for disabled caching is not known   * `unknown_entitlements` - The Develocity license entitlements cannot be checked  `null` when the goal execution is cacheable or if the information is not available.  */
    @SerialName(value = "nonCacheabilityCategory")
    val nonCacheabilityCategory: MavenBuildCachePerformanceGoalExecutionEntry.NonCacheabilityCategory? = null,

    /* The human-readable reason for a non-cacheable goal execution. `null` when the goal execution is cacheable or if the information is not available. */
    @SerialName(value = "nonCacheabilityReason")
    val nonCacheabilityReason: kotlin.String? = null,

    /* The number of bytes of the produced or consumed cache artifact. For a goal execution where the outputs are successfully stored to a local or remote cache, this is the size of the stored cache artifact. For a goal execution where the outputs are successfully loaded from a local or remote cache, this is the size of the loaded cache artifact. `null` if the goal execution is not cacheable, or if the attempt to store or load the artifact from cache does not succeed.  */
    @SerialName(value = "cacheArtifactSize")
    val cacheArtifactSize: kotlin.Long? = null,

    /* The reason why the cache artifact has been rejected:   * `artifact_size_too_large` - The size of the artifact is larger than the remote build cache can accept.  `null` if the goal is not cacheable, or if the attempt to store the artifact does not succeed.  */
    @SerialName(value = "cacheArtifactRejectedReason")
    val cacheArtifactRejectedReason: MavenBuildCachePerformanceGoalExecutionEntry.CacheArtifactRejectedReason? = null,

    /* Build cache key. `null` if no build cache key was computed (e.g. when fingerprinting failed). */
    @SerialName(value = "cacheKey")
    val cacheKey: kotlin.String? = null

) {

    /**
     * The avoidance outcome of this task with respect to performance:   * `avoided_from_local_cache` - Goal whose execution is avoided due to reusing a local build cache entry   * `avoided_from_remote_cache` - Goal whose execution is avoided due to reusing a remote build cache entry   * `executed_cacheable` - Goal which is executed but is cacheable   * `executed_not_cacheable` - Goal which is executed but is not cacheable   * `executed_unknown_cacheability` - Goal which is executed and whose cacheability cannot be determined   * `skipped` - Skipped goal 
     *
     * Values: AVOIDED_FROM_LOCAL_CACHE,AVOIDED_FROM_REMOTE_CACHE,EXECUTED_CACHEABLE,EXECUTED_NOT_CACHEABLE,EXECUTED_UNKNOWN_CACHEABILITY,SKIPPED
     */
    @Serializable
    enum class AvoidanceOutcome(val value: kotlin.String) {
        @SerialName(value = "avoided_from_local_cache") AVOIDED_FROM_LOCAL_CACHE("avoided_from_local_cache"),
        @SerialName(value = "avoided_from_remote_cache") AVOIDED_FROM_REMOTE_CACHE("avoided_from_remote_cache"),
        @SerialName(value = "executed_cacheable") EXECUTED_CACHEABLE("executed_cacheable"),
        @SerialName(value = "executed_not_cacheable") EXECUTED_NOT_CACHEABLE("executed_not_cacheable"),
        @SerialName(value = "executed_unknown_cacheability") EXECUTED_UNKNOWN_CACHEABILITY("executed_unknown_cacheability"),
        @SerialName(value = "skipped") SKIPPED("skipped");
    }
    /**
     * The category of the non-cacheability reason:   * `build_cache_disabled_by_user` - The build cache is disabled by the user   * `goal_execution_marked_non_cacheable` - The goal execution is marked as non-cacheable   * `goal_not_supported` - The goal does not support build caching   * `no_gradle_enterprise_server_configured` - No Develocity server is configured **Deprecated, use `no_develocity_server_configured` instead**   * `no_develocity_server_configured` - No Develocity server is configured   * `non_clean_build` - The `clean` lifecycle is not executed    * `not_entitled` - The Develocity license entitlements does not allow Maven build caching   * `offline_build` - The build is run in offline mode   * `unknown` - Reason for disabled caching is not known   * `unknown_entitlements` - The Develocity license entitlements cannot be checked  `null` when the goal execution is cacheable or if the information is not available. 
     *
     * Values: BUILD_CACHE_DISABLED_BY_USER,GOAL_EXECUTION_MARKED_NON_CACHEABLE,GOAL_NOT_SUPPORTED,NO_GRADLE_ENTERPRISE_SERVER_CONFIGURED,NO_DEVELOCITY_SERVER_CONFIGURED,NON_CLEAN_BUILD,NOT_ENTITLED,OFFLINE_BUILD,UNKNOWN,UNKNOWN_ENTITLEMENTS
     */
    @Serializable
    enum class NonCacheabilityCategory(val value: kotlin.String) {
        @SerialName(value = "build_cache_disabled_by_user") BUILD_CACHE_DISABLED_BY_USER("build_cache_disabled_by_user"),
        @SerialName(value = "goal_execution_marked_non_cacheable") GOAL_EXECUTION_MARKED_NON_CACHEABLE("goal_execution_marked_non_cacheable"),
        @SerialName(value = "goal_not_supported") GOAL_NOT_SUPPORTED("goal_not_supported"),
        @SerialName(value = "no_gradle_enterprise_server_configured") NO_GRADLE_ENTERPRISE_SERVER_CONFIGURED("no_gradle_enterprise_server_configured"),
        @SerialName(value = "no_develocity_server_configured") NO_DEVELOCITY_SERVER_CONFIGURED("no_develocity_server_configured"),
        @SerialName(value = "non_clean_build") NON_CLEAN_BUILD("non_clean_build"),
        @SerialName(value = "not_entitled") NOT_ENTITLED("not_entitled"),
        @SerialName(value = "offline_build") OFFLINE_BUILD("offline_build"),
        @SerialName(value = "unknown") UNKNOWN("unknown"),
        @SerialName(value = "unknown_entitlements") UNKNOWN_ENTITLEMENTS("unknown_entitlements");
    }
    /**
     * The reason why the cache artifact has been rejected:   * `artifact_size_too_large` - The size of the artifact is larger than the remote build cache can accept.  `null` if the goal is not cacheable, or if the attempt to store the artifact does not succeed. 
     *
     * Values: ARTIFACT_SIZE_TOO_LARGE
     */
    @Serializable
    enum class CacheArtifactRejectedReason(val value: kotlin.String) {
        @SerialName(value = "artifact_size_too_large") ARTIFACT_SIZE_TOO_LARGE("artifact_size_too_large");
    }
}

